pipeline {
    agent any

    environment {
        IMAGE_NAME = "frontend-app"
        CONTAINER_NAME = "frontend-container"
        DOCKERHUB_USER = "nikithap2002"   
    }

    stages {
        stage('Checkout Code') {
            steps {
                echo ' Checking out source code...'
                git branch: 'main', url: 'https://github.com/NIKITHAPALANISAMY412/newrepo.git'
            }
        }

      stage('Build Docker Image') {
    steps {
        script {
            echo 'üê≥ Building Docker image...'
            sh 'docker build --network=host -t $IMAGE_NAME "./employee frontend final"'
        }
    }
}



        stage('Run Docker Container') {
            steps {
                script {
                    echo 'Running container for testing...'
                    sh 'docker stop $CONTAINER_NAME || true'
                    sh 'docker rm $CONTAINER_NAME || true'
                    sh 'docker run -d --name $CONTAINER_NAME -p 4200:80 $IMAGE_NAME'
                }
            }
        }

        stage('Verify Container') {
            steps {
                script {
                    echo 'üîç Checking if container is running...'
                    sh 'docker ps | grep $CONTAINER_NAME'
                }
            }
        }

        stage('Push to Docker Hub') {
            when {
                expression { return env.DOCKERHUB_USER != "your_dockerhub_username" }
            }
            steps {
                script {
                    echo 'Pushing image to Docker Hub...'
                    withCredentials([string(credentialsId: 'dockerhub-token', variable: 'DOCKERHUB_TOKEN')]) {
                        sh """
                            echo "$DOCKERHUB_TOKEN" | docker login -u "$DOCKERHUB_USER" --password-stdin
                            docker tag $IMAGE_NAME $DOCKERHUB_USER/$IMAGE_NAME:latest
                            docker push $DOCKERHUB_USER/$IMAGE_NAME:latest
                        """
                    }
                }
            }
        }
    }

    post {
        success {
            echo ' Frontend build and deployment successful!'
        }
        failure {
            echo ' Build failed. Please check the logs.'
        }
    }
}
