# stages:
#   - install
#   - build
#   - docker

# variables:
#   DOCKER_IMAGE: "$CI_REGISTRY_IMAGE/angular-frontend"
#   NODE_VERSION: "20"

# image: node:$NODE_VERSION

# # Stage 1: Install dependencies
# install-dependencies:
#   stage: install
#   script:
#     - cd "employee frontend final"
#     - npm install
#   only:
#     - dev

# # Stage 2: Build Angular app
# build-frontend:
#   stage: build
#   script:
#     - cd "employee frontend final"
#     - npm run build --prod
#   artifacts:
#     paths:
#       - "employee frontend final/dist/"
#   only:
#     - dev

# # Stage 3: Build and push Docker image
# docker-build-push:
#   stage: docker
#   image: docker:24.0.5
#   services:
#     - docker:24.0.5-dind
#   variables:
#     DOCKER_TLS_CERTDIR: "/certs"
#   before_script:
#     - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
#   script:
#     - docker build -t $DOCKER_IMAGE:latest .
#     - docker tag $DOCKER_IMAGE:latest $DOCKER_IMAGE:$CI_COMMIT_SHORT_SHA
#     - docker push $DOCKER_IMAGE:latest
#     - docker push $DOCKER_IMAGE:$CI_COMMIT_SHORT_SHA
#   only:
#     - dev


stages:
  - docker

variables:
  DOCKER_IMAGE: "$CI_REGISTRY_IMAGE/angular-frontend"

docker-build-push:
  stage: docker
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    # Build Docker image
    - docker build -t $DOCKER_IMAGE:latest .
    - docker tag $DOCKER_IMAGE:latest $DOCKER_IMAGE:$CI_COMMIT_SHORT_SHA
    # Push Docker image
    - docker push $DOCKER_IMAGE:latest
    - docker push $DOCKER_IMAGE:$CI_COMMIT_SHORT_SHA
  only:
    - dev

